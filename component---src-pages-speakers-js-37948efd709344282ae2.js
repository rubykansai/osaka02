(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{198:function(e,t,a){"use strict";a.r(t);var l=a(0),n=a.n(l),r=a(205),c=a.n(r),s=a(203),i=(a(38),function(e){return n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"grid-wrapper"},n.a.createElement("div",{className:"col-6"},n.a.createElement("span",{className:"image fit"},n.a.createElement("img",{src:e.avatar_url,alt:""})))),n.a.createElement("h4",null,e.name),n.a.createElement("ul",{className:"icons"},n.a.createElement("li",null,n.a.createElement("a",{href:e.twitter_url,className:"icon fa-twitter"},n.a.createElement("span",{className:"label"},"Twitter"))),n.a.createElement("li",null,n.a.createElement("a",{href:e.github_url,className:"icon fa-github"},n.a.createElement("span",{className:"label"},"GitHub")))),n.a.createElement("p",null,e.abstract))});t.default=function(e){return n.a.createElement(s.a,null,n.a.createElement(c.a,null,n.a.createElement("title",null,"Speakers - Osaka RubyKaigi 02"),n.a.createElement("meta",{name:"description",content:"Speakers Page"})),n.a.createElement("section",{id:"banner",className:"style2"},n.a.createElement("div",{className:"inner"},n.a.createElement("header",{className:"major"},n.a.createElement("h1",null,"Speakers")))),n.a.createElement("div",{id:"main",className:"alt"},n.a.createElement("section",{id:"one"},n.a.createElement("div",{className:"inner"},n.a.createElement("header",{className:"major"},n.a.createElement("h2",null,"Keynote Speakers")),n.a.createElement("div",{className:"grid-wrapper"},n.a.createElement("div",{className:"col-4"},n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"grid-wrapper"},n.a.createElement("div",{className:"col-6"},n.a.createElement("span",{className:"image fit"},n.a.createElement("img",{src:"https://dgndea2fsuumd.cloudfront.net/assets/profile/mah/mah-b0da2853a2fbebeac06eb34780de0ca3eb9a5a772b7279cb831d90dece8d0d42.jpg",alt:""})))),n.a.createElement("h4",null,"西見 公宏 "),n.a.createElement("ul",{className:"icons"},n.a.createElement("li",null,n.a.createElement("a",{href:"https://twitter.com/mah_lab",className:"icon fa-twitter"},n.a.createElement("span",{className:"label"},"Twitter"))),n.a.createElement("li",null,n.a.createElement("a",{href:"https://blog.mah-lab.com/",className:"icon fa-globe"},n.a.createElement("span",{className:"label"},"Blog")))),n.a.createElement("p",null,"基調講演")))))),n.a.createElement("section",{id:"two"},n.a.createElement("div",{className:"inner"},n.a.createElement("header",{className:"major"},n.a.createElement("h2",null,"Speakers")),n.a.createElement("div",{className:"grid-wrapper"},n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"SHIBATA Hiroshi",avatar_url:"https://avatars1.githubusercontent.com/u/12301?s=460&v=4",twitter_url:"https://twitter.com/hsbt",github_url:"https://github.com/hsbt",abstract:"プログラミング言語 Ruby と RubyGems の脆弱性対応を一例として、OSS に 脆弱性が発見された場合のインシデントレスポンスの初動対応からリリースまでに行ったことを紹介します。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"Kazuhiro NISHIYAMA",avatar_url:"https://avatars2.githubusercontent.com/u/11857?s=460&v=4",twitter_url:"https://twitter.com/znz",github_url:"https://github.com/znz",abstract:"テキスト処理を得意とする Ruby でチャットボットを作成し運用し続けてたまった知見の紹介として、 チャットボットの面白さや便利さ、作成上の注意点などをお話しします。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"安川 要平",avatar_url:"https://avatars0.githubusercontent.com/u/155807?s=460&v=4",twitter_url:"https://twitter.com/yasulab",github_url:"https://github.com/yasulab",abstract:"世界100カ国・1900道場、日本全国175ヶ所以上に広がる子どものための プログラミング道場『CoderDojo』コミュニティを支える Ruby/Rails 活用事例についてお話しします。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"わかば260",avatar_url:"https://avatars0.githubusercontent.com/u/12092707?s=460&v=4",twitter_url:"https://twitter.com/wakaba260yen",github_url:"https://github.com/yuemori",abstract:"リアルタイムゲームにおけるRuby/Railsアプリケーションは高いパフォーマンスを要求されます。 要求パフォーマンスをクリアするために行ったベンチマークやプロファイルのテスト・改善のサイクルを繰り返す手法、 そして改善の中において行った実装や技術選択などについて、得られた知見を共有します。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"Pocke",avatar_url:"https://avatars2.githubusercontent.com/u/4361134?s=460&v=4",twitter_url:"https://twitter.com/p_ck_",github_url:"https://github.com/pocke",abstract:"Rubyを`-w`オプション付きで実行したことはありますか？ このオプションをつけてRubyを実行すると、様々なRubyの警告が表示されるようになります。 このトークでは、この警告の意味や消し方、警告によって見つかったバグなどを紹介します。 このトークによって世界のRubyコードから警告が減ってくれれば幸いです。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"willnet",avatar_url:"https://avatars1.githubusercontent.com/u/82371?s=460&v=4",twitter_url:"https://twitter.com/netwillnet",github_url:"https://github.com/willnet",abstract:"Railsの機能の一つに、Concernsと呼ばれるものがあります。 app/controllers/concernsやapp/models/concernsに関心事を切り出して配置するものです。 私はフリーランスや技術顧問として多くの会社のRailsプロジェクトに関わってきました。その中で、良かれと思ってConcernsを使ったものの、 そのことによりかえって可読性や保守性を下げてしまうケースをよく見かけています。 これは「Concernsをどのように使うのか」が曖昧な状態でなんとなく使っていることが原因ではないかと思います。 この発表では  - Concernsとは何か - Concernsを構成するActiveSupport::Concernとは 何か - Concernsを使うべきでないケースと代替案 - Concernsを使うべきケースについて解説することで 「Concernsを完全に理解した」状態にすることを目的にしています。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"KaoruHotate",avatar_url:"https://avatars2.githubusercontent.com/u/5081402?s=460&v=4",twitter_url:"https://twitter.com/purunkaoru",github_url:"https://github.com/hotatekaoru",abstract:"Railsアプリを作っていて、 「Controllerの見通しをよくする」「Viewにロジックを書かない」といった言葉を聞いたことはないでしょうか。 Fat Controller / Fat Viewは、Modelに処理を移すという手法をとることが多いと思いますが、その結果、Fat Modelという負債を作ってしまいます。 1つのActiveRecordを継承したモデルオブジェクトに大量の便利メソッドと大量の分岐を作ったり、 中身を見ないと何をやっているかが分からないクラスを作ったり。。。 本セッションでは、Fat Modelをリファクタリングして見えてきた、6つのパターンを話します。各パターンのサンプルコードと、 解決できる内容・メリットを、他のプロジェクトにもいかせるように解説します。 サンプルコードは、過去に出会ってきたコードを題材にし、実体験に基づいた修正内容を紹介します。Fat Modelに悩む方の一助になれば幸いです。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"Tomohiro Hashidate (joker1007)",avatar_url:"https://avatars0.githubusercontent.com/u/116996?s=460&v=4",twitter_url:"https://twitter.com/joker1007",github_url:"https://github.com/joker1007",abstract:"Ruby-2.7は最近のリリースの中でも特にCoolな機能が盛り沢山です。 如何にそれらの機能がCoolかということを自作のgemのAPIとその実装を基に紹介します。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"yebis0942",avatar_url:"https://secure.gravatar.com/avatar/41d6ba8848793742a99614e07c82fe36?d=mm&s=400",twitter_url:"https://twitter.com/yebis0942",github_url:"",abstract:"Ruby 2.7に向けて、numbered parameter、パターンマッチなどのクールな構文が提案されています。 これらの新しい構文を使って書かれたRubyのコードを古いバージョンのRubyで動作するようにコンパイルする方法について解説します。"})),n.a.createElement("div",{className:"col-4"},n.a.createElement(i,{name:"Yusuke Endoh",avatar_url:"https://avatars1.githubusercontent.com/u/21557?s=460&v=4",twitter_url:"https://twitter.com/mametter",github_url:"https://github.com/mame",abstract:"Ruby 3の三大目標の1つである静的解析機能について、現在の計画と進捗を報告します。 Ruby 3では、複数のコンポーネントからなる静的解析ツールチェインが構想されています。 (1)標準的な型シグネチャフォーマット、 (2)アプリケーションコードの型シグネチャを要求せずに緩く検査し、型シグネチャを推定するlevel-1型検査、 (3)アプリケーションコードの型シグネチャを元に検査を行うlevel-2型検査、 により、Rubyの型検査に対するさまざまなレベルのニーズに応えることを企図しています。 この発表では特に、level-1型検査器として発表者が開発している『型プロファイラ』について詳しく説明します。 型プロファイラは、注釈のないRubyコードを対象とする軽量な静的解析ツールです。 静的解析によるプログラミング支援として型エラーの可能性を検出したり、 型注釈を必要とする別の検証ツールを使うために型注釈の推定を行ったりすることができます。 型プロファイラの基本的なアイデア、設計において気にしていること、現在の進捗などを説明する予定です。"})))))))}},200:function(e,t,a){"use strict";var l=a(0),n=a.n(l),r=a(66),c=a.n(r);a.d(t,"a",function(){return c.a});a(201),a(9).default.enqueue,n.a.createContext({})},201:function(e,t,a){var l;e.exports=(l=a(202))&&l.default||l},202:function(e,t,a){"use strict";a.r(t);a(23);var l=a(0),n=a.n(l),r=a(91);t.default=function(e){var t=e.location,a=e.pageResources;return a?n.a.createElement(r.a,Object.assign({location:t,pageResources:a},a.json)):null}},203:function(e,t,a){"use strict";var l=a(0),n=a.n(l),r=(a(204),a(200)),c=function(e){return n.a.createElement("header",{id:"header",className:"alt"},n.a.createElement("nav",null,n.a.createElement("a",{className:"menu-link",onClick:e.onToggleMenu,href:"javascript:;"},"Menu")))},s=function(e){return n.a.createElement("nav",{id:"menu"},n.a.createElement("div",{className:"inner"},n.a.createElement("ul",{className:"links"},n.a.createElement("li",null,n.a.createElement(r.a,{onClick:e.onToggleMenu,to:"/"},"Home")),n.a.createElement("li",null,n.a.createElement(r.a,{onClick:e.onToggleMenu,to:"/about"},"About")),n.a.createElement("li",null,n.a.createElement(r.a,{onClick:e.onToggleMenu,to:"/schedule"},"Schedule")),n.a.createElement("li",null,n.a.createElement(r.a,{onClick:e.onToggleMenu,to:"/speakers"},"Speakers")),n.a.createElement("li",null,n.a.createElement(r.a,{onClick:e.onToggleMenu,to:"/sponsors"},"Sponsors")),n.a.createElement("li",null,n.a.createElement(r.a,{onClick:e.onToggleMenu,to:"/team"},"Team")))),n.a.createElement("a",{className:"close",onClick:e.onToggleMenu,href:"javascript:;"},"Close"))},i=function(e){return n.a.createElement("footer",{id:"footer"},n.a.createElement("div",{className:"inner"},n.a.createElement("ul",{className:"icons"},n.a.createElement("li",null,n.a.createElement("a",{href:"https://twitter.com/rubykansai","aria-label":"Twitter",className:"icon alt fa-twitter",target:"_blank"},n.a.createElement("span",{className:"label"},"Twitter"))),n.a.createElement("li",null,n.a.createElement("a",{href:"https://www.facebook.com/RubyKansai/","aria-label":"Facebook",className:"icon alt fa-facebook",target:"_blank"},n.a.createElement("span",{className:"label"},"Facebook"))),n.a.createElement("li",null,n.a.createElement("a",{href:"https://github.com/rubykansai","aria-label":"GitHub",className:"icon alt fa-github",target:"_blank"},n.a.createElement("span",{className:"label"},"GitHub"))),n.a.createElement("li",null,n.a.createElement("a",{href:"https://rubykansai.doorkeeper.jp/contact/new","aria-label":"Envelope",className:"icon alt fa-envelope",target:"_blank"},n.a.createElement("span",{className:"label"},"Envelope")))),n.a.createElement("ul",{className:"copyright"},n.a.createElement("li",null,"Osaka RubyKaigi 02 © 2019"),n.a.createElement("li",null,"Design: ",n.a.createElement("a",{href:"https://html5up.net"},"HTML5 UP")))))};var o=function(e){var t,a;function l(t){var a;return(a=e.call(this,t)||this).state={isMenuVisible:!1,loading:"is-loading"},a.handleToggleMenu=a.handleToggleMenu.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(a)),a}a=e,(t=l).prototype=Object.create(a.prototype),t.prototype.constructor=t,t.__proto__=a;var r=l.prototype;return r.componentDidMount=function(){var e=this;this.timeoutId=setTimeout(function(){e.setState({loading:""})},100)},r.componentWillUnmount=function(){this.timeoutId&&clearTimeout(this.timeoutId)},r.handleToggleMenu=function(){this.setState({isMenuVisible:!this.state.isMenuVisible})},r.render=function(){var e=this.props.children;return n.a.createElement("div",{className:"body "+this.state.loading+" "+(this.state.isMenuVisible?"is-menu-visible":"")},n.a.createElement("div",{id:"wrapper"},n.a.createElement(c,{onToggleMenu:this.handleToggleMenu}),e,n.a.createElement(i,null)),n.a.createElement(s,{onToggleMenu:this.handleToggleMenu}))},l}(n.a.Component);t.a=o}}]);
//# sourceMappingURL=component---src-pages-speakers-js-37948efd709344282ae2.js.map